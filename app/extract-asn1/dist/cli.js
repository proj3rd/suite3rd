(()=>{"use strict";const e=require("node:fs"),s=require("node:process");!function(){const[,,t]=s.argv;t||(console.log("path is required"),(0,s.exit)(-1));const n=(0,e.readFileSync)(t,"utf8");console.log(function(e){const s=function(e){function s(s){const t=s.start.exec(e);return!!t&&(s.stop.lastIndex=t.index+1,!!s.stop.exec(e))}return s({start:/^\s*?-- ASN1START\s*?$/gm,stop:/^\s*?-- ASN1STOP\s*?$/gm,includeDelimiter:!1})?{start:/^\s*?-- ASN1START\s*?$/gm,stop:/^\s*?-- ASN1STOP\s*?$/gm,includeDelimiter:!1}:s({start:/^\s*?-- \*+\s*?$/gm,stop:/^\s*?END\s*?$/gm,includeDelimiter:!0})?{start:/^\s*?-- \*+\s*?$/gm,stop:/^\s*?END\s*?$/gm,includeDelimiter:!0}:void 0}(e);if(!s)return null;const{start:t,stop:n,includeDelimiter:i}=s,r=[];for(;;){const s=t.exec(e);if(!s)break;n.lastIndex=s.index+1;const o=n.exec(e);if(!o)break;t.lastIndex=o.index+1;const c=s.index+(i?0:s[0].length),l=o.index+(i?o[0].length:0);r.push(e.substring(c,l))}return r.join("\n")}(n))}()})();