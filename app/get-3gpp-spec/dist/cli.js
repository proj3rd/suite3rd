#!/usr/bin/env node
(()=>{"use strict";var e={205:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Client=void 0;const s=r(896),o=r(928),n=r(756),i=r(23),a=r(71),c=r(847),d=r(45),l=r(968),u=r(625),p=r(554),h=r(429),f=r(577),m=(0,i.promisify)(s.readdir),g=(0,i.promisify)(s.mkdir),w=(0,i.promisify)(s.stat),v=(0,i.promisify)(s.open),y=(0,i.promisify)(s.close),k=(0,i.promisify)(s.unlink);async function S(e){try{return await e()}catch(e){return}}t.Client=class{constructor(e=3e4){this.availableListCommands=["LIST -a","LIST"],this.ftp=new a.FTPContext(e),this.prepareTransfer=this._enterFirstCompatibleMode([h.enterPassiveModeIPv6,h.enterPassiveModeIPv4]),this.parseList=c.parseList,this._progressTracker=new d.ProgressTracker}close(){this.ftp.close(),this._progressTracker.stop()}get closed(){return this.ftp.closed}connect(e="localhost",t=21){return this.ftp.reset(),this.ftp.socket.connect({host:e,port:t,family:this.ftp.ipFamily},(()=>this.ftp.log(`Connected to ${(0,p.describeAddress)(this.ftp.socket)} (${(0,p.describeTLS)(this.ftp.socket)})`))),this._handleConnectResponse()}connectImplicitTLS(e="localhost",t=21,r={}){return this.ftp.reset(),this.ftp.socket=(0,n.connect)(t,e,r,(()=>this.ftp.log(`Connected to ${(0,p.describeAddress)(this.ftp.socket)} (${(0,p.describeTLS)(this.ftp.socket)})`))),this.ftp.tlsOptions=r,this._handleConnectResponse()}_handleConnectResponse(){return this.ftp.handle(void 0,((e,t)=>{e instanceof Error?t.reject(e):(0,f.positiveCompletion)(e.code)?t.resolve(e):t.reject(new a.FTPError(e))}))}send(e,t=!1){return t?(this.ftp.log("Deprecated call using send(command, flag) with boolean flag to ignore errors. Use sendIgnoringError(command)."),this.sendIgnoringError(e)):this.ftp.request(e)}sendIgnoringError(e){return this.ftp.handle(e,((e,t)=>{e instanceof a.FTPError?t.resolve({code:e.code,message:e.message}):e instanceof Error?t.reject(e):t.resolve(e)}))}async useTLS(e={},t="AUTH TLS"){const r=await this.send(t);return this.ftp.socket=await(0,p.upgradeSocket)(this.ftp.socket,e),this.ftp.tlsOptions=e,this.ftp.log(`Control socket is using: ${(0,p.describeTLS)(this.ftp.socket)}`),r}login(e="anonymous",t="guest"){return this.ftp.log(`Login security: ${(0,p.describeTLS)(this.ftp.socket)}`),this.ftp.handle("USER "+e,((e,r)=>{e instanceof Error?r.reject(e):(0,f.positiveCompletion)(e.code)?r.resolve(e):331===e.code?this.ftp.send("PASS "+t):r.reject(new a.FTPError(e))}))}async useDefaultSettings(){const e=(await this.features()).has("MLST");this.availableListCommands=e?["MLSD","LIST -a","LIST"]:["LIST -a","LIST"],await this.send("TYPE I"),await this.sendIgnoringError("STRU F"),await this.sendIgnoringError("OPTS UTF8 ON"),e&&await this.sendIgnoringError("OPTS MLST type;size;modify;unique;unix.mode;unix.owner;unix.group;unix.ownername;unix.groupname;"),this.ftp.hasTLS&&(await this.sendIgnoringError("PBSZ 0"),await this.sendIgnoringError("PROT P"))}async access(e={}){var t,r;const s=!0===e.secure;let o;if(o="implicit"===e.secure?await this.connectImplicitTLS(e.host,e.port,e.secureOptions):await this.connect(e.host,e.port),s){const s=null!==(t=e.secureOptions)&&void 0!==t?t:{};s.host=null!==(r=s.host)&&void 0!==r?r:e.host,await this.useTLS(s)}return await this.sendIgnoringError("OPTS UTF8 ON"),await this.login(e.user,e.password),await this.useDefaultSettings(),o}async pwd(){const e=await this.send("PWD"),t=e.message.match(/"(.+)"/);if(null===t||void 0===t[1])throw new Error(`Can't parse response to command 'PWD': ${e.message}`);return t[1]}async features(){const e=await this.sendIgnoringError("FEAT"),t=new Map;return e.code<400&&(0,f.isMultiline)(e.message)&&e.message.split("\n").slice(1,-1).forEach((e=>{const r=e.trim().split(" ");t.set(r[0],r[1]||"")})),t}async cd(e){const t=await this.protectWhitespace(e);return this.send("CWD "+t)}async cdup(){return this.send("CDUP")}async lastMod(e){const t=await this.protectWhitespace(e),r=(await this.send(`MDTM ${t}`)).message.slice(4);return(0,u.parseMLSxDate)(r)}async size(e){const t=`SIZE ${await this.protectWhitespace(e)}`,r=await this.send(t),s=parseInt(r.message.slice(4),10);if(Number.isNaN(s))throw new Error(`Can't parse response to command '${t}' as a numerical value: ${r.message}`);return s}async rename(e,t){const r=await this.protectWhitespace(e),s=await this.protectWhitespace(t);return await this.send("RNFR "+r),this.send("RNTO "+s)}async remove(e,t=!1){const r=await this.protectWhitespace(e);return t?this.sendIgnoringError(`DELE ${r}`):this.send(`DELE ${r}`)}trackProgress(e){this._progressTracker.bytesOverall=0,this._progressTracker.reportTo(e)}async uploadFrom(e,t,r={}){return this._uploadWithCommand(e,t,"STOR",r)}async appendFrom(e,t,r={}){return this._uploadWithCommand(e,t,"APPE",r)}async _uploadWithCommand(e,t,r,s){return"string"==typeof e?this._uploadLocalFile(e,t,r,s):this._uploadFromStream(e,t,r)}async _uploadLocalFile(e,t,r,o){const n=await v(e,"r"),i=(0,s.createReadStream)("",{fd:n,start:o.localStart,end:o.localEndInclusive,autoClose:!1});try{return await this._uploadFromStream(i,t,r)}finally{await S((()=>y(n)))}}async _uploadFromStream(e,t,r){const s=e=>this.ftp.closeWithError(e);e.once("error",s);try{const s=await this.protectWhitespace(t);return await this.prepareTransfer(this.ftp),await(0,h.uploadFrom)(e,{ftp:this.ftp,tracker:this._progressTracker,command:r,remotePath:s,type:"upload"})}finally{e.removeListener("error",s)}}async downloadTo(e,t,r=0){return"string"==typeof e?this._downloadToFile(e,t,r):this._downloadToStream(e,t,r)}async _downloadToFile(e,t,r){const o=r>0,n=o?"r+":"w",i=await v(e,n),a=(0,s.createWriteStream)("",{fd:i,start:r,autoClose:!1});try{return await this._downloadToStream(a,t,r)}catch(t){const r=await S((()=>w(e))),s=r&&r.size>0;throw!o&&!s&&await S((()=>k(e))),t}finally{await S((()=>y(i)))}}async _downloadToStream(e,t,r){const s=e=>this.ftp.closeWithError(e);e.once("error",s);try{const s=await this.protectWhitespace(t);return await this.prepareTransfer(this.ftp),await(0,h.downloadTo)(e,{ftp:this.ftp,tracker:this._progressTracker,command:r>0?`REST ${r}`:`RETR ${s}`,remotePath:s,type:"download"})}finally{e.removeListener("error",s),e.end()}}async list(e=""){const t=await this.protectWhitespace(e);let r;for(const e of this.availableListCommands){const s=""===t?e:`${e} ${t}`;await this.prepareTransfer(this.ftp);try{const t=await this._requestListWithCommand(s);return this.availableListCommands=[e],t}catch(e){if(!(e instanceof a.FTPError))throw e;r=e}}throw r}async _requestListWithCommand(e){const t=new l.StringWriter;await(0,h.downloadTo)(t,{ftp:this.ftp,tracker:this._progressTracker,command:e,remotePath:"",type:"list"});const r=t.getText(this.ftp.encoding);return this.ftp.log(r),this.parseList(r)}async removeDir(e){return this._exitAtCurrentDirectory((async()=>{await this.cd(e);const t=await this.pwd();await this.clearWorkingDir(),"/"===t||(await this.cdup(),await this.removeEmptyDir(t))}))}async clearWorkingDir(){for(const e of await this.list())e.isDirectory?(await this.cd(e.name),await this.clearWorkingDir(),await this.cdup(),await this.removeEmptyDir(e.name)):await this.remove(e.name)}async uploadFromDir(e,t){return this._exitAtCurrentDirectory((async()=>(t&&await this.ensureDir(t),await this._uploadToWorkingDir(e))))}async _uploadToWorkingDir(e){const t=await m(e);for(const r of t){const t=(0,o.join)(e,r),s=await w(t);s.isFile()?await this.uploadFrom(t,r):s.isDirectory()&&(await this._openDir(r),await this._uploadToWorkingDir(t),await this.cdup())}}async downloadToDir(e,t){return this._exitAtCurrentDirectory((async()=>(t&&await this.cd(t),await this._downloadFromWorkingDir(e))))}async _downloadFromWorkingDir(e){await async function(e){try{await w(e)}catch(t){await g(e,{recursive:!0})}}(e);for(const t of await this.list()){const r=(0,o.join)(e,t.name);t.isDirectory?(await this.cd(t.name),await this._downloadFromWorkingDir(r),await this.cdup()):t.isFile&&await this.downloadTo(r,t.name)}}async ensureDir(e){e.startsWith("/")&&await this.cd("/");const t=e.split("/").filter((e=>""!==e));for(const e of t)await this._openDir(e)}async _openDir(e){await this.sendIgnoringError("MKD "+e),await this.cd(e)}async removeEmptyDir(e){const t=await this.protectWhitespace(e);return this.send(`RMD ${t}`)}async protectWhitespace(e){if(!e.startsWith(" "))return e;const t=await this.pwd();return(t.endsWith("/")?t:t+"/")+e}async _exitAtCurrentDirectory(e){const t=await this.pwd();try{return await e()}finally{this.closed||await S((()=>this.cd(t)))}}_enterFirstCompatibleMode(e){return async t=>{let r;t.log("Trying to find optimal transfer strategy...");for(const s of e)try{const e=await s(t);return t.log("Optimal transfer strategy found."),this.prepareTransfer=s,e}catch(e){r=e}throw new Error(`None of the available transfer strategies work. Last error response was '${r}'.`)}}async upload(e,t,r={}){return this.ftp.log("Warning: upload() has been deprecated, use uploadFrom()."),this.uploadFrom(e,t,r)}async append(e,t,r={}){return this.ftp.log("Warning: append() has been deprecated, use appendFrom()."),this.appendFrom(e,t,r)}async download(e,t,r=0){return this.ftp.log("Warning: download() has been deprecated, use downloadTo()."),this.downloadTo(e,t,r)}async uploadDir(e,t){return this.ftp.log("Warning: uploadDir() has been deprecated, use uploadFromDir()."),this.uploadFromDir(e,t)}async downloadDir(e){return this.ftp.log("Warning: downloadDir() has been deprecated, use downloadToDir()."),this.downloadToDir(e)}}},72:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.FileInfo=t.FileType=void 0,function(e){e[e.Unknown=0]="Unknown",e[e.File=1]="File",e[e.Directory=2]="Directory",e[e.SymbolicLink=3]="SymbolicLink"}(r||(t.FileType=r={}));class s{constructor(e){this.name=e,this.type=r.Unknown,this.size=0,this.rawModifiedAt="",this.modifiedAt=void 0,this.permissions=void 0,this.hardLinkCount=void 0,this.link=void 0,this.group=void 0,this.user=void 0,this.uniqueID=void 0,this.name=e}get isDirectory(){return this.type===r.Directory}get isSymbolicLink(){return this.type===r.SymbolicLink}get isFile(){return this.type===r.File}get date(){return this.rawModifiedAt}set date(e){this.rawModifiedAt=e}}t.FileInfo=s,s.UnixPermission={Read:4,Write:2,Execute:1}},71:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FTPContext=t.FTPError=void 0;const s=r(278),o=r(577);class n extends Error{constructor(e){super(e.message),this.name=this.constructor.name,this.code=e.code}}function i(){}t.FTPError=n,t.FTPContext=class{constructor(e=0,t="utf8"){this.timeout=e,this.verbose=!1,this.ipFamily=void 0,this.tlsOptions={},this._partialResponse="",this._encoding=t,this._socket=this.socket=this._newSocket(),this._dataSocket=void 0}close(){const e=this._task?"User closed client during task":"User closed client",t=new Error(e);this.closeWithError(t)}closeWithError(e){this._closingError||(this._closingError=e,this._closeControlSocket(),this._closeSocket(this._dataSocket),this._passToHandler(e),this._stopTrackingTask())}get closed(){return void 0===this.socket.remoteAddress||void 0!==this._closingError}reset(){this.socket=this._newSocket()}get socket(){return this._socket}set socket(e){this.dataSocket=void 0,this.tlsOptions={},this._partialResponse="",this._socket&&(e.localPort===this._socket.localPort?this._removeSocketListeners(this.socket):this._closeControlSocket()),e&&(this._closingError=void 0,e.setTimeout(0),e.setEncoding(this._encoding),e.setKeepAlive(!0),e.on("data",(e=>this._onControlSocketData(e))),e.on("end",(()=>this.closeWithError(new Error("Server sent FIN packet unexpectedly, closing connection.")))),e.on("close",(e=>{e||this.closeWithError(new Error("Server closed connection unexpectedly."))})),this._setupDefaultErrorHandlers(e,"control socket")),this._socket=e}get dataSocket(){return this._dataSocket}set dataSocket(e){this._closeSocket(this._dataSocket),e&&(e.setTimeout(0),this._setupDefaultErrorHandlers(e,"data socket")),this._dataSocket=e}get encoding(){return this._encoding}set encoding(e){this._encoding=e,this.socket&&this.socket.setEncoding(e)}send(e){const t=e.startsWith("PASS")?"> PASS ###":`> ${e}`;this.log(t),this._socket.write(e+"\r\n",this.encoding)}request(e){return this.handle(e,((e,t)=>{e instanceof Error?t.reject(e):t.resolve(e)}))}handle(e,t){if(this._task){const e=new Error("User launched a task while another one is still running. Forgot to use 'await' or '.then()'?");e.stack+=`\nRunning task launched at: ${this._task.stack}`,this.closeWithError(e)}return new Promise(((r,s)=>{if(this._task={stack:(new Error).stack||"Unknown call stack",responseHandler:t,resolver:{resolve:e=>{this._stopTrackingTask(),r(e)},reject:e=>{this._stopTrackingTask(),s(e)}}},this._closingError){const e=new Error(`Client is closed because ${this._closingError.message}`);return e.stack+=`\nClosing reason: ${this._closingError.stack}`,e.code=void 0!==this._closingError.code?this._closingError.code:"0",void this._passToHandler(e)}this.socket.setTimeout(this.timeout),e&&this.send(e)}))}log(e){this.verbose&&console.log(e)}get hasTLS(){return"encrypted"in this._socket}_stopTrackingTask(){this.socket.setTimeout(0),this._task=void 0}_onControlSocketData(e){this.log(`< ${e}`);const t=this._partialResponse+e,r=(0,o.parseControlResponse)(t);this._partialResponse=r.rest;for(const e of r.messages){const t=parseInt(e.substr(0,3),10),r={code:t,message:e},s=t>=400?new n(r):void 0;this._passToHandler(s||r)}}_passToHandler(e){this._task&&this._task.responseHandler(e,this._task.resolver)}_setupDefaultErrorHandlers(e,t){e.once("error",(e=>{e.message+=` (${t})`,this.closeWithError(e)})),e.once("close",(e=>{e&&this.closeWithError(new Error(`Socket closed due to transmission error (${t})`))})),e.once("timeout",(()=>{e.destroy(),this.closeWithError(new Error(`Timeout (${t})`))}))}_closeControlSocket(){this._removeSocketListeners(this._socket),this._socket.on("error",i),this.send("QUIT"),this._closeSocket(this._socket)}_closeSocket(e){e&&(this._removeSocketListeners(e),e.on("error",i),e.destroy())}_removeSocketListeners(e){e.removeAllListeners(),e.removeAllListeners("timeout"),e.removeAllListeners("data"),e.removeAllListeners("end"),e.removeAllListeners("error"),e.removeAllListeners("close"),e.removeAllListeners("connect")}_newSocket(){return new s.Socket}}},45:(e,t)=>{function r(){}Object.defineProperty(t,"__esModule",{value:!0}),t.ProgressTracker=void 0,t.ProgressTracker=class{constructor(){this.bytesOverall=0,this.intervalMs=500,this.onStop=r,this.onHandle=r}reportTo(e=r){this.onHandle=e}start(e,t,s){let o=0;this.onStop=function(e,t){const s=setInterval(t,e);return t(),e=>{clearInterval(s),e&&t(),t=r}}(this.intervalMs,(()=>{const r=e.bytesRead+e.bytesWritten;this.bytesOverall+=r-o,o=r,this.onHandle({name:t,type:s,bytes:r,bytesOverall:this.bytesOverall})}))}stop(){this.onStop(!1)}updateAndStop(){this.onStop(!0)}}},226:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},968:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StringWriter=void 0;const s=r(203);class o extends s.Writable{constructor(){super(...arguments),this.buf=Buffer.alloc(0)}_write(e,t,r){e instanceof Buffer?(this.buf=Buffer.concat([this.buf,e]),r(null)):r(new Error("StringWriter expects chunks of type 'Buffer'."))}getText(e){return this.buf.toString(e)}}t.StringWriter=o},876:function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,s,o)}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||s(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.enterPassiveModeIPv6=t.enterPassiveModeIPv4=void 0,o(r(205),t),o(r(71),t),o(r(72),t),o(r(847),t),o(r(226),t);var n=r(429);Object.defineProperty(t,"enterPassiveModeIPv4",{enumerable:!0,get:function(){return n.enterPassiveModeIPv4}}),Object.defineProperty(t,"enterPassiveModeIPv6",{enumerable:!0,get:function(){return n.enterPassiveModeIPv6}})},554:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ipIsPrivateV4Address=t.upgradeSocket=t.describeAddress=t.describeTLS=void 0;const s=r(756);t.describeTLS=function(e){if(e instanceof s.TLSSocket){return e.getProtocol()||"Server socket or disconnected client socket"}return"No encryption"},t.describeAddress=function(e){return"IPv6"===e.remoteFamily?`[${e.remoteAddress}]:${e.remotePort}`:`${e.remoteAddress}:${e.remotePort}`},t.upgradeSocket=function(e,t){return new Promise(((r,o)=>{const n=Object.assign({},t,{socket:e}),i=(0,s.connect)(n,(()=>{!1===n.rejectUnauthorized||i.authorized?(i.removeAllListeners("error"),r(i)):o(i.authorizationError)})).once("error",(e=>{o(e)}))}))},t.ipIsPrivateV4Address=function(e=""){e.startsWith("::ffff:")&&(e=e.substr(7));const t=e.split(".").map((e=>parseInt(e,10)));return 10===t[0]||172===t[0]&&t[1]>=16&&t[1]<=31||192===t[0]&&168===t[1]||"127.0.0.1"===e}},577:(e,t)=>{function r(e){return/^\d\d\d(?:$| )/.test(e)}function s(e){return/^\d\d\d-/.test(e)}function o(e){return""!==e.trim()}Object.defineProperty(t,"__esModule",{value:!0}),t.positiveIntermediate=t.positiveCompletion=t.isMultiline=t.isSingleLine=t.parseControlResponse=void 0,t.parseControlResponse=function(e){const t=e.split(/\r?\n/).filter(o),n=[];let i,a=0;for(let e=0;e<t.length;e++){const o=t[e];if(i)i.test(o)&&(i=void 0,n.push(t.slice(a,e+1).join("\n")));else if(s(o)){const t=o.substr(0,3);i=new RegExp(`^${t}(?:$| )`),a=e}else r(o)&&n.push(o)}return{messages:n,rest:i?t.slice(a).join("\n")+"\n":""}},t.isSingleLine=r,t.isMultiline=s,t.positiveCompletion=function(e){return e>=200&&e<300},t.positiveIntermediate=function(e){return e>=300&&e<400}},847:function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,s,o)}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&s(t,e,r);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.parseList=void 0;const i=[n(r(433)),n(r(733)),n(r(625))];function a(e){return""!==e.trim()}function c(e){return!e.startsWith("total")}const d=/\r?\n/;t.parseList=function(e){const t=e.split(d).filter(a).filter(c);if(0===t.length)return[];const r=t[t.length-1],s=(o=r,i.find((e=>!0===e.testLine(o))));var o;if(!s)throw new Error("This library only supports MLSD, Unix- or DOS-style directory listing. Your FTP server seems to be using another format. You can see the transmitted listing when setting `client.ftp.verbose = true`. You can then provide a custom parser to `client.parseList`, see the documentation for details.");const n=t.map(s.parseLine).filter((e=>void 0!==e));return s.transformList(n)}},433:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.transformList=t.parseLine=t.testLine=void 0;const s=r(72),o=new RegExp("(\\S+)\\s+(\\S+)\\s+(?:(<DIR>)|([0-9]+))\\s+(\\S.*)");t.testLine=function(e){return/^\d{2}/.test(e)&&o.test(e)},t.parseLine=function(e){const t=e.match(o);if(null===t)return;const r=t[5];if("."===r||".."===r)return;const n=new s.FileInfo(r);return"<DIR>"===t[3]?(n.type=s.FileType.Directory,n.size=0):(n.type=s.FileType.File,n.size=parseInt(t[4],10)),n.rawModifiedAt=t[1]+" "+t[2],n},t.transformList=function(e){return e}},625:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseMLSxDate=t.transformList=t.parseLine=t.testLine=void 0;const s=r(72);function o(e,t){t.size=parseInt(e,10)}const n={size:o,sizd:o,unique:(e,t)=>{t.uniqueID=e},modify:(e,t)=>{t.modifiedAt=a(e),t.rawModifiedAt=t.modifiedAt.toISOString()},type:(e,t)=>{if(e.startsWith("OS.unix=slink"))return t.type=s.FileType.SymbolicLink,t.link=e.substr(e.indexOf(":")+1),1;switch(e){case"file":t.type=s.FileType.File;break;case"dir":t.type=s.FileType.Directory;break;case"OS.unix=symlink":t.type=s.FileType.SymbolicLink;break;case"cdir":case"pdir":return 2;default:t.type=s.FileType.Unknown}return 1},"unix.mode":(e,t)=>{const r=e.substr(-3);t.permissions={user:parseInt(r[0],10),group:parseInt(r[1],10),world:parseInt(r[2],10)}},"unix.ownername":(e,t)=>{t.user=e},"unix.owner":(e,t)=>{void 0===t.user&&(t.user=e)},get"unix.uid"(){return this["unix.owner"]},"unix.groupname":(e,t)=>{t.group=e},"unix.group":(e,t)=>{void 0===t.group&&(t.group=e)},get"unix.gid"(){return this["unix.group"]}};function i(e,t){const r=e.indexOf(t);return[e.substr(0,r),e.substr(r+t.length)]}function a(e){return new Date(Date.UTC(+e.slice(0,4),+e.slice(4,6)-1,+e.slice(6,8),+e.slice(8,10),+e.slice(10,12),+e.slice(12,14),+e.slice(15,18)))}t.testLine=function(e){return/^\S+=\S+;/.test(e)||e.startsWith(" ")},t.parseLine=function(e){const[t,r]=i(e," ");if(""===r||"."===r||".."===r)return;const o=new s.FileInfo(r),a=t.split(";");for(const e of a){const[t,r]=i(e,"=");if(!r)continue;const s=n[t.toLowerCase()];if(s&&2===s(r,o))return}return o},t.transformList=function(e){const t=new Map;for(const r of e)r.isSymbolicLink||void 0===r.uniqueID||t.set(r.uniqueID,r);const r=[];for(const s of e){if(s.isSymbolicLink&&void 0!==s.uniqueID&&void 0===s.link){const e=t.get(s.uniqueID);void 0!==e&&(s.link=e.name)}!s.name.includes("/")&&r.push(s)}return r},t.parseMLSxDate=a},733:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.transformList=t.parseLine=t.testLine=void 0;const s=r(72),o=new RegExp("([bcdelfmpSs-])(((r|-)(w|-)([xsStTL-]))((r|-)(w|-)([xsStTL-]))((r|-)(w|-)([xsStTL-]?)))\\+?\\s*(\\d+)\\s+(?:(\\S+(?:\\s\\S+)*?)\\s+)?(?:(\\S+(?:\\s\\S+)*)\\s+)?(\\d+(?:,\\s*\\d+)?)\\s+((?:\\d+[-/]\\d+[-/]\\d+)|(?:\\S{3}\\s+\\d{1,2})|(?:\\d{1,2}\\s+\\S{3})|(?:\\d{1,2}月\\s+\\d{1,2}日))\\s+((?:\\d+(?::\\d+)?)|(?:\\d{4}年))\\s(.*)");function n(e,t,r){let o=0;"-"!==e&&(o+=s.FileInfo.UnixPermission.Read),"-"!==t&&(o+=s.FileInfo.UnixPermission.Write);const n=r.charAt(0);return"-"!==n&&n.toUpperCase()!==n&&(o+=s.FileInfo.UnixPermission.Execute),o}t.testLine=function(e){return o.test(e)},t.parseLine=function(e){const t=e.match(o);if(null===t)return;const r=t[21];if("."===r||".."===r)return;const i=new s.FileInfo(r);switch(i.size=parseInt(t[18],10),i.user=t[16],i.group=t[17],i.hardLinkCount=parseInt(t[15],10),i.rawModifiedAt=t[19]+" "+t[20],i.permissions={user:n(t[4],t[5],t[6]),group:n(t[8],t[9],t[10]),world:n(t[12],t[13],t[14])},t[1].charAt(0)){case"d":i.type=s.FileType.Directory;break;case"e":case"l":i.type=s.FileType.SymbolicLink;break;case"b":case"c":case"f":case"-":i.type=s.FileType.File;break;default:i.type=s.FileType.Unknown}if(i.isSymbolicLink){const e=r.indexOf(" -> ");-1!==e&&(i.name=r.substring(0,e),i.link=r.substring(e+4))}return i},t.transformList=function(e){return e}},429:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.downloadTo=t.uploadFrom=t.connectForPassiveTransfer=t.parsePasvResponse=t.enterPassiveModeIPv4=t.parseEpsvResponse=t.enterPassiveModeIPv6=void 0;const s=r(554),o=r(203),n=r(756),i=r(577);function a(e){const t=e.match(/[|!]{3}(.+)[|!]/);if(null===t||void 0===t[1])throw new Error(`Can't parse response to 'EPSV': ${e}`);const r=parseInt(t[1],10);if(Number.isNaN(r))throw new Error(`Can't parse response to 'EPSV', port is not a number: ${e}`);return r}function c(e){const t=e.match(/([-\d]+,[-\d]+,[-\d]+,[-\d]+),([-\d]+),([-\d]+)/);if(null===t||4!==t.length)throw new Error(`Can't parse response to 'PASV': ${e}`);return{host:t[1].replace(/,/g,"."),port:256*(255&parseInt(t[2],10))+(255&parseInt(t[3],10))}}function d(e,t,r){return new Promise(((s,o)=>{let i=r._newSocket();const a=function(e){e.message="Can't open data connection in passive mode: "+e.message,o(e)},c=function(){i.destroy(),o(new Error(`Timeout when trying to open data connection to ${e}:${t}`))};i.setTimeout(r.timeout),i.on("error",a),i.on("timeout",c),i.connect({port:t,host:e,family:r.ipFamily},(()=>{r.socket instanceof n.TLSSocket&&(i=(0,n.connect)(Object.assign({},r.tlsOptions,{socket:i,session:r.socket.getSession()}))),i.removeListener("error",a),i.removeListener("timeout",c),r.dataSocket=i,s()}))}))}t.enterPassiveModeIPv6=async function(e){const t=await e.request("EPSV"),r=a(t.message);if(!r)throw new Error("Can't parse EPSV response: "+t.message);const s=e.socket.remoteAddress;if(void 0===s)throw new Error("Control socket is disconnected, can't get remote address.");return await d(s,r,e),t},t.parseEpsvResponse=a,t.enterPassiveModeIPv4=async function(e){const t=await e.request("PASV"),r=c(t.message);if(!r)throw new Error("Can't parse PASV response: "+t.message);const o=e.socket.remoteAddress;return(0,s.ipIsPrivateV4Address)(r.host)&&o&&!(0,s.ipIsPrivateV4Address)(o)&&(r.host=o),await d(r.host,r.port,e),t},t.parsePasvResponse=c,t.connectForPassiveTransfer=d;class l{constructor(e,t){this.ftp=e,this.progress=t,this.response=void 0,this.dataTransferDone=!1}onDataStart(e,t){if(void 0===this.ftp.dataSocket)throw new Error("Data transfer should start but there is no data connection.");this.ftp.socket.setTimeout(0),this.ftp.dataSocket.setTimeout(this.ftp.timeout),this.progress.start(this.ftp.dataSocket,e,t)}onDataDone(e){this.progress.updateAndStop(),this.ftp.socket.setTimeout(this.ftp.timeout),this.ftp.dataSocket&&this.ftp.dataSocket.setTimeout(0),this.dataTransferDone=!0,this.tryResolve(e)}onControlDone(e,t){this.response=t,this.tryResolve(e)}onError(e,t){this.progress.updateAndStop(),this.ftp.socket.setTimeout(this.ftp.timeout),this.ftp.dataSocket=void 0,e.reject(t)}onUnexpectedRequest(e){const t=new Error(`Unexpected FTP response is requesting an answer: ${e.message}`);this.ftp.closeWithError(t)}tryResolve(e){this.dataTransferDone&&void 0!==this.response&&(this.ftp.dataSocket=void 0,e.resolve(this.response))}}t.uploadFrom=function(e,t){const r=new l(t.ftp,t.tracker),n=`${t.command} ${t.remotePath}`;return t.ftp.handle(n,((n,a)=>{if(n instanceof Error)r.onError(a,n);else if(150===n.code||125===n.code){const n=t.ftp.dataSocket;if(!n)return void r.onError(a,new Error("Upload should begin but no data connection is available."));const i=!("getCipher"in n)||void 0!==n.getCipher();c=n,"secureConnect",d=()=>{t.ftp.log(`Uploading to ${(0,s.describeAddress)(n)} (${(0,s.describeTLS)(n)})`),r.onDataStart(t.remotePath,t.type),(0,o.pipeline)(e,n,(e=>{e?r.onError(a,e):r.onDataDone(a)}))},!0===i?d():c.once("secureConnect",(()=>d()))}else(0,i.positiveCompletion)(n.code)?r.onControlDone(a,n):(0,i.positiveIntermediate)(n.code)&&r.onUnexpectedRequest(n);var c,d}))},t.downloadTo=function(e,t){if(!t.ftp.dataSocket)throw new Error("Download will be initiated but no data connection is available.");const r=new l(t.ftp,t.tracker);return t.ftp.handle(t.command,((n,a)=>{if(n instanceof Error)r.onError(a,n);else if(150===n.code||125===n.code){const n=t.ftp.dataSocket;if(!n)return void r.onError(a,new Error("Download should begin but no data connection is available."));t.ftp.log(`Downloading from ${(0,s.describeAddress)(n)} (${(0,s.describeTLS)(n)})`),r.onDataStart(t.remotePath,t.type),(0,o.pipeline)(n,e,(e=>{e?r.onError(a,e):r.onDataDone(a)}))}else 350===n.code?t.ftp.send("RETR "+t.remotePath):(0,i.positiveCompletion)(n.code)?r.onControlDone(a,n):(0,i.positiveIntermediate)(n.code)&&r.onUnexpectedRequest(n)}))}},896:e=>{e.exports=require("fs")},278:e=>{e.exports=require("net")},928:e=>{e.exports=require("path")},203:e=>{e.exports=require("stream")},756:e=>{e.exports=require("tls")},23:e=>{e.exports=require("util")}},t={};function r(s){var o=t[s];if(void 0!==o)return o.exports;var n=t[s]={exports:{}};return e[s].call(n.exports,n,n.exports,r),n.exports}r.d=(e,t)=>{for(var s in t)r.o(t,s)&&!r.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={};r.r(e),r.d(e,{parse:()=>i});var t=r(876),s=r(928);const o=require("process"),n="0123456789abcdefghijklmnopqrstuvwxyz".split("");function i(e){if(3!==e.length&&6!==e.length)return;const t=[-1,-1,-1],r=e.length/3;for(let s=0;s<3;s++){const o=e.substring(s*r,(s+1)*r),i=+o;if(Number.isFinite(i)){t[s]=i;continue}const a=n.indexOf(o);if(-1===a)return;t[s]=a}return t}const{parse:a}=e,c="ftp.3gpp.org";function d(e){const[t,r]=e.split(" "),[s,o,n]=t.split("-").map(Number),i=n>=98?1900+n:2e3+n,[a,c]=r.substring(0,r.length-2).split(":").map(Number),d=r.substring(r.length-2);return new Date(i,s-1,o,"PM"===d?a+12:a,c)}const[,,l,u,p]=o.argv;let h,f;(function(e,r,o){return n=this,i=void 0,u=function*(){const n=function(e){const t=e.indexOf(".");if(-1===t)throw Error("Spec must be in a form of ab.cde[-f]");return e.substring(0,t)}(e),i=`/Specs/archive/${n}_series/${e}`,l=new t.Client;return l.access({host:c}).then((()=>l.cd(i))).then((()=>l.list())).then((e=>e.map((e=>{const{name:t}=(0,s.parse)(e.name),r=t.lastIndexOf("-");if(-1===r)throw Error("Spec must be in a form of AB.CDE[-F]-xyz or AB.CDE[-F]-uvwxyz");const o=t.substring(r+1),n=a(o);return Object.assign(Object.assign({path:i},e),{date:d(e.rawModifiedAt),version:n})})).filter((e=>{if("latest"===r)return!0;const{version:t}=e;if("*"!==r&&void 0===t)return!1;if("*"===o)return!0;const s=d(e.rawModifiedAt).getTime(),[n,i]=o.split("-").map(Number),a=new Date(n,i-1).getTime(),c=new Date(n,i+2).getTime();return s>=a&&s<c})).sort(((e,t)=>{const r=e.version,s=t.version;for(let e=0;e<3;e++)if(r[e]!==s[e])return s[e]-r[e];return t.date.getTime()-e.date.getTime()})))).catch((e=>Promise.reject(e))).finally((()=>l.close()))},new((l=void 0)||(l=Promise))((function(e,t){function r(e){try{o(u.next(e))}catch(e){t(e)}}function s(e){try{o(u.throw(e))}catch(e){t(e)}}function o(t){var o;t.done?e(t.value):(o=t.value,o instanceof l?o:new l((function(e){e(o)}))).then(r,s)}o((u=u.apply(n,i||[])).next())}));var n,i,l,u})(l,u,p).then((e=>{if("*"!==u&&"*"!==p){if(!e.length)throw Error("The requested spec not found");return f=e[0],h=new t.Client,h.access({host:c})}console.table(e,["path","name","version","date","size"])})).then((()=>{if(!h)return;const{path:e,name:t}=f,r=(0,s.resolve)((0,o.cwd)(),t);return console.log(`Downloading the requested spec to ${r}...`),h.downloadTo(r,`${e}/${t}`)})).then((()=>{console.log("Done")})).catch((e=>{console.error(e)})).finally((()=>h&&h.close()))})()})();